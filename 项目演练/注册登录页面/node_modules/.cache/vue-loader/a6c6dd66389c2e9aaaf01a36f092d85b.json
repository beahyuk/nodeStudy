{"remainingRequest":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\src\\views\\Register.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\src\\views\\Register.vue","mtime":1595634906644},{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\css-loader\\dist\\cjs.js","mtime":1595337272041},{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1595337287990},{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\postcss-loader\\src\\index.js","mtime":1595337283833},{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595337266391},{"path":"E:\\前端学习\\nodeStudy\\项目演练\\注册登录页面\\node_modules\\vue-loader\\lib\\index.js","mtime":1595337287988}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sb2dpbi13cmFwIHsNCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9hc3NldHMvYmFja2dyb3VuZC5wbmciKTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCi5sb2dpbi13cmFwIGgyIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBjb2xvcjogI2ZmZjsNCn0NCg0KLm5hdiB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOw0KICBwYWRkaW5nOiAxMHB4Ow0KICBmb250LXdlaWdodDogYm9sZDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLm5hdiBhIHsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGNvbG9yOiAjMmMzZTUwOw0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQoubmF2IGEucm91dGVyLWxpbmstZXhhY3QtYWN0aXZlIHsNCiAgcGFkZGluZzogMCAxNXB4IDVweCAxNXB4Ow0KICBib3JkZXI6IHNvbGlkICMzYTYyZDc7DQogIGJvcmRlci13aWR0aDogMCAwIDJweCAwOw0KfQ0KDQouYnV0dG9uIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsNCn0NCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-wrap\">\r\n    <h2>O365认证共通化应用</h2>\r\n    <el-form\r\n      :label-position=\"labelPosition\"\r\n      label-width=\"80px\"\r\n      :rules=\"rules\"\r\n      ref=\"formData\"\r\n      :model=\"formData\"\r\n      class=\"login-form\"\r\n    >\r\n      <!-- 1.登陆注册按钮 -->\r\n      <div class=\"nav\">\r\n        <router-link to=\"/login\">登录</router-link>\r\n        <router-link to=\"/register\">注册</router-link>\r\n      </div>\r\n      <!-- 2.表单 -->\r\n      <el-form-item label=\"邮箱：\" prop=\"email\">\r\n        <el-input v-model=\"formData.email\" placeholder=\"Email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名：\" prop=\"username\">\r\n        <el-input v-model=\"formData.username\" placeholder=\"Username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码：\" prop=\"password\">\r\n        <el-input v-model=\"formData.password\" type=\"password\" placeholder=\"Password\"></el-input>\r\n      </el-form-item>\r\n      <!-- 3. 注册button按钮 -->\r\n      <div class=\"button\">\r\n        <el-button type=\"primary\" @click=\"handleReg('formData')\">注册</el-button>\r\n        <el-button @click=\"toLogin\">登录</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    // var userEmail = (rule, value, callback) => {\r\n    //   const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\r\n    //   if (!value) {\r\n    //     return callback(new Error(\"邮箱不能为空\"));\r\n    //   }\r\n    //   setTimeout(() => {\r\n    //     if (mailReg.test(value)) {\r\n    //       callback();\r\n    //     } else {\r\n    //       callback(new Error(\"请输入正确的邮箱格式\"));\r\n    //     }\r\n    //   }, 100);\r\n    // };\r\n\r\n    var validateEmail = (rule, value, callback) => {\r\n      var pattern = /\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}/g;\r\n      console.log(`邮箱是否正确：${pattern.test(value)}`);\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入邮箱\"));\r\n      } else if (!this.checkEmail(value)) {\r\n        callback(new Error(\"请输入正确的邮箱\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validateName = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入用户名\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      labelPosition: \"right\",\r\n      formData: {\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        email: [\r\n          {\r\n            validator: validateEmail,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        username: [\r\n          {\r\n            validator: validateName,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        password: [\r\n          {\r\n            validator: validatePass,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleReg(formName) {\r\n      const email = this.formData.email;\r\n      const username = this.formData.username;\r\n      const password = this.formData.password;\r\n      this.$refs[formName].validate((valid) => {\r\n        if (!valid) {\r\n          console.log(\"邮箱/用户名/密码为空\");\r\n          return false;\r\n        } else {\r\n          console.log(\"axios请求\");\r\n          this.axios\r\n            .post(\"http://172.25.73.71:3001/api/register\", {\r\n              email,\r\n              username,\r\n              password,\r\n            })\r\n            .then((res) => {\r\n              console.log(res);\r\n              if(res.data.status === 200){\r\n                                this.$router.replace(\"/\");\r\n                this.$message.success(res.data.msg);\r\n\r\n              }else{\r\n              this.$message.warning(res.data.msg);\r\n              }\r\n            });\r\n        }\r\n      });\r\n    },\r\n    toLogin() {\r\n      this.$router.replace(\"/login\");\r\n    },\r\n\r\n    checkEmail(str) {\r\n      var pattern = /\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}/g;\r\n      if (pattern.test(str)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.login-wrap {\r\n  background-image: url(\"../assets/background.png\");\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.login-wrap h2 {\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n.nav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n  text-decoration: none;\r\n}\r\n.nav a.router-link-exact-active {\r\n  padding: 0 15px 5px 15px;\r\n  border: solid #3a62d7;\r\n  border-width: 0 0 2px 0;\r\n}\r\n\r\n.button {\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n</style>\r\n"]}]}